name: Run tests

on: [push]

env:
  go-version: 1.14

jobs:
  static_check:
    runs-on: ubuntu-16.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.go-version }}

      - name: Vet and lint code
        run: |
          go get -u -v golang.org/x/lint/golint
          /home/runner/go/bin/golint -set_exit_status ./...
          go vet ./...

  build:
    needs: static_check
    # TODO: move to ubuntu 18.04 once mongodb version 3.6 is deprecated
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        mongodb-version: [3.6.17, 4.0.17, 4.2.5, 4.2.5-sharded]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.go-version }}

      - name: Export env variables
        run: |
          echo "::set-env name=UBUNTU_VERSION::linux-x86_64-ubuntu$(lsb_release -r | tr -d '[:alpha:][:blank:][:punct:]')"
          echo "::set-env name=MONGO_VERSION::$( echo ${{ matrix.mongodb-version }} | tr -d '[:alpha:][=-=]')"

      - name: Download MongoDB
        run: |
          wget -q http://downloads.mongodb.org/linux/mongodb-$UBUNTU_VERSION-$MONGO_VERSION.tgz
          tar xzvf mongodb-$UBUNTU_VERSION-$MONGO_VERSION.tgz
          echo "::add-path::$PWD/mongodb-$UBUNTU_VERSION-$MONGO_VERSION/bin"
          mkdir $PWD/db

      - name: Setup a sharded cluster
        if: contains(matrix.mongodb-version, 'sharded')
        run: |
          wget https://raw.githubusercontent.com/feliixx/mongodbShardedCluster/master/deploy.sh
          wget https://raw.githubusercontent.com/feliixx/mongodbShardedCluster/master/config.txt
          chmod +x deploy.sh
          ./deploy.sh config.txt $PWD/db

      - name: Setup a standalone db
        if: contains(matrix.mongodb-version, 'sharded') == false
        run: mongod --dbpath $PWD/db --logpath /dev/null --nojournal --fork

      - name: Run go tests
        run: ./test.sh

      - name: Full run
        run: |
          go build
          ./mgodatagen -f datagen/testdata/big.json

      - name: Export coverage result
        run: bash <(curl -s https://codecov.io/bash)
